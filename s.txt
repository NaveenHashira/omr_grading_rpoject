if omr_id_contour is not None:
    x, y, w, h = cv2.boundingRect(omr_id_contour)
    omr_id_region = canny[y:y+h, x:x+w]
    cv2.imshow("omr_id_region", omr_id_region)
else:
    print("OMR ID contour not found.")


def getNameContours(img):
    contours, _ = cv2.findContours(img, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
    img_area = img.shape[0] * img.shape[1]
    for cnt in contours:
        area = cv2.contourArea(cnt)
        if area > 0.03 * img_area:
            return cnt  
    return None

    contour_indices = [3, 4, 5]
contour_names = ["top_left", "bottom_left", "top_right"]

coordinates = {}  # Dictionary to store the (x, y) of each

for idx, name in zip(contour_indices, contour_names):
    contour = utils.get_third_largest_contour(thresh, idx)
    x, y, w, h = cv2.boundingRect(contour)
    coordinates[name] = (x, y)
    cropped_region = canny[y:y+h, x:x+w]
    
    cv2.imshow(f"{name}_contour", cropped_region)

print("Coordinates of contours (x, y):")
for name, (x, y) in coordinates.items():
    print(f"{name}: ({x}, {y})")